# render.yaml
services:
  - type: web
    name: playlist-converter-backend
    env: docker
    dockerfilePath: Backend/PlaylistConverter/Dockerfile
    buildCommand: "cd Backend/PlaylistConverter && mvn clean package -DskipTests"
    healthCheckPath: "/api/home"
    envVars:
      - key: DATABASE_URL
        fromService:
          type: pserv
          name: playlist-converter-db
          envVar: DATABASE_URL
      - key: REDIS_URL
        fromService:
          type: redis
          name: playlist-converter-redis
          envVar: REDIS_URL
      - key: FRONTEND_URL
        value: "https://your-frontend-url.onrender.com"
      - key: BASE_URL
        value: "https://playlist-converter-backend.onrender.com"
      # Add all your other environment variables and secrets here
      - key: spring.datasource.url
        value: ${DATABASE_URL}
      - key: spring.datasource.username
        value: postgres
      - key: spring.datasource.password
        sync: false
      - key: spring.redis.host
        fromService:
          type: redis
          name: playlist-converter-redis
          envVar: host
      - key: spring.redis.port
        fromService:
          type: redis
          name: playlist-converter-redis
          envVar: port
      - key: security.secret-key
        sync: false
      - key: app.encryption.password
        sync: false
      - key: app.encryption.salt
        sync: false

  - type: pserv
    name: playlist-converter-db
    plan: standard
    env: docker
    dockerfilePath: database.Dockerfile # or use the default image
    disk:
      name: playlist-converter-db-data
      sizeGB: 10
    envVars:
      - key: POSTGRES_DB
        value: postgres
      - key: POSTGRES_USER
        value: postgres
      - key: POSTGRES_PASSWORD
        sync: false

  - type: redis
    name: playlist-converter-redis
    plan: standard
    maxmemoryPolicy: allkeys-lru
    ipAllowList:
      - "0.0.0.0/0"